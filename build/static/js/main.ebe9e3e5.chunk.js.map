{"version":3,"sources":["country.js","wrapper.js","country-list.js","input.js","search.js","Region.js","action-list.js","header.js","country-selected.js","country-page.js","App.js","reducer.js","serviceWorker.js","index.js"],"names":["CountryStyled","styled","div","Country","flag","name","population","region","capital","cioc","nativeName","alpha2Code","history","useHistory","onClick","console","log","push","slugify","loading","src","alt","className","WrapperStyled","Wrapper","children","CountryListStyled","CountryList","dispatch","useDispatch","countryListByName","useSelector","state","countryList","filterByRegion","length","coutryFilteredByRegion","useEffect","fetch","then","response","json","list","type","payload","catch","map","key","InputStyled","label","Input","props","SearchStyled","Search","useState","inputValue","setInputValue","placeholder","value","onChange","e","target","RegionFilterStyled","Region","dropdown","setdropdown","onRegionChange","selectEvent","regionSelected","id","ActionListStyled","ActionList","HeaderStyled","Header","setDarkMode","darkMode","to","CountrySelectedStyled","CountrySelected","subregion","topLevelDomain","currencies","languages","borders","item","class","CountryPageStyled","CountryPage","match","DBcountry","find","params","country","setCountry","toLowerCase","data","goBack","store","createStore","action","filter","includes","App","setChecked","mainClass","changeMedia","mq","matches","window","matchMedia","addListener","removeListener","path","component","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.ebe9e3e5.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {\r\n  useHistory,\r\n} from 'react-router-dom'\r\nimport slugify from 'slugify'\r\n\r\nconst CountryStyled = styled.div`\r\n  cursor: pointer;\r\n  text-align: left;\r\n  border-radius: 5px;\r\n  /* overflow: hidden; */\r\n  box-shadow: 0 0 7px 2px rgba(0,0,0,.03);\r\n  &:hover .details {\r\n    border-radius: 0 0 5px 5px;\r\n    border: 1px solid var(--black);\r\n    border-top: none;\r\n  }\r\n  img {\r\n    width: 100%;\r\n    height: 160px;\r\n    object-fit: cover;\r\n    vertical-align: top;\r\n    border-radius: 5px 5px 0 0;\r\n  }\r\n  .details {\r\n    padding: 1.5em;\r\n    border: 1px solid transparent;\r\n    border-top: none;\r\n    transition: .3s border;\r\n    background: var(--white);\r\n  }\r\n  h2 {\r\n    margin: 0;\r\n    margin-bottom: 1rem;\r\n    font-size: 18px;\r\n    font-weight: 700;\r\n  }\r\n  p {\r\n    font-size: .9em;\r\n    margin-bottom: .5rem;\r\n  }\r\n`\r\n\r\nfunction Country({\r\n  flag,\r\n  name,\r\n  population,\r\n  region,\r\n  capital,\r\n  nativeName,\r\n  cioc,\r\n  alpha2Code,\r\n}) {\r\n  const history = useHistory()\r\n  function handleClick() {\r\n    console.log('cioc', cioc)\r\n    // const id = cioc || name\r\n    history.push(`/country/${slugify(alpha2Code)}`)\r\n  }\r\n\r\n  return (\r\n    <CountryStyled onClick={handleClick}>\r\n      <img loading=\"lazy\" src={flag} alt=\"\" />\r\n      <div className=\"details\">\r\n        <h2>{name}</h2>\r\n        {/* <p><strong>AF:</strong> {alpha2Code}</p> */}\r\n        <p><strong>Population:</strong> {population}</p>\r\n        <p><strong>Region:</strong> {region}</p>\r\n        <p><strong>Capital:</strong> {capital}</p>\r\n      </div>\r\n    </CountryStyled>\r\n  )\r\n}\r\n\r\nexport default Country\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst WrapperStyled = styled.div`\r\n  max-width: 1312px;\r\n  margin: auto;\r\n  padding: 0 1rem;\r\n`\r\n\r\nfunction Wrapper({ children }) {\r\n  return (\r\n    <WrapperStyled>\r\n      {children}\r\n    </WrapperStyled>\r\n  )\r\n}\r\n\r\nexport default Wrapper\r\n","import React, { useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport Country from './country'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport Wrapper from './wrapper'\r\n\r\nconst CountryListStyled = styled.div`\r\n  display: grid;\r\n  grid-row-gap: 2.3em;\r\n  grid-auto-flow: columns;\r\n  grid-column-gap: 66px;\r\n  grid-template-columns: repeat(auto-fill, 270px);\r\n  background: var(--background);\r\n  justify-content: center;\r\n  padding: 3em 0;\r\n`\r\n\r\nfunction CountryList() {\r\n  const dispatch = useDispatch()\r\n\r\n  const countryListByName = useSelector((state) => state.countryListByName)\r\n\r\n  const countryList = useSelector((state) => {\r\n    if (state.filterByRegion !== '' && countryListByName.length === 0) {\r\n      return state.coutryFilteredByRegion;\r\n    }\r\n    if (countryListByName.length > 0) {\r\n      return countryListByName\r\n    }\r\n\r\n    return state.countryList;\r\n  })\r\n\r\n  console.log('el estado total de mi app es', countryList)\r\n  // const [countryList, setCountryList] = useState([])\r\n  useEffect(() => {\r\n    fetch('https://restcountries.eu/rest/v2/all')\r\n      .then((response) => {\r\n        return response.json()\r\n      })\r\n      .then((list) => {\r\n        dispatch({\r\n          type: 'SET_COUNTRY_LIST',\r\n          payload: list\r\n        })\r\n        // setCountryList(data)\r\n        console.log(list.length)\r\n      })\r\n      .catch(() => {\r\n        console.log('hubo un error, que dolor que dolo que pena')\r\n      })\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <Wrapper>\r\n      <CountryListStyled>\r\n        {\r\n          countryList.map(({ name, flag, population, capital, region, nativeName, cioc, alpha2Code }) => {\r\n            return (\r\n              <Country\r\n                flag={flag}\r\n                name={name}\r\n                key={name}\r\n                population={population}\r\n                region={region}\r\n                capital={capital}\r\n                nativeName={nativeName}\r\n                cioc={cioc}\r\n                alpha2Code={alpha2Code}\r\n              />\r\n            )\r\n          })\r\n        }\r\n      </CountryListStyled>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default CountryList\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst InputStyled = styled.label`\r\n  display: inline-flex;\r\n  background: var(--white);\r\n  align-items: center;\r\n  box-shadow: 0 2px 9px 0 rgba(0,0,0,.05);\r\n  padding: 0 2rem;\r\n  border-radius: 5px;\r\n  flex: 1;\r\n  i {\r\n    margin-right: 1em;\r\n    color: #C4C4C4;\r\n  }\r\n  input {\r\n    /* width: 100%; */\r\n    flex: 1;\r\n    border: none;\r\n    height: 48px;\r\n    line-height: 48px;\r\n    font-size: .7em;\r\n    outline: 0;\r\n    color: var(--black);\r\n    background: var(--white);\r\n    &::-webkit-input-placeholder {\r\n      color: #C4C4C4;\r\n    }\r\n  }\r\n`\r\n\r\nfunction Input({ ...props }) {\r\n  return (\r\n    <InputStyled>\r\n      <i className=\"fas fa-search\"></i>\r\n      <input type=\"text\" {...props} />\r\n    </InputStyled>\r\n  )\r\n}\r\n\r\nexport default Input\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport Input from './input'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst SearchStyled = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  .close {\r\n    position: absolute;\r\n    right: 1em;\r\n    top: 1em;\r\n    border-radius: 50%;\r\n    border: none;\r\n    box-shadow: 0 2px 9px 0 rgba(0,0,0,.05);\r\n  }\r\n`\r\n\r\nfunction Search() {\r\n  const [inputValue, setInputValue] = useState('')\r\n  const dispatch = useDispatch()\r\n\r\n  const filterByName = (e) => {\r\n    setInputValue(e.target.value)\r\n    dispatch({\r\n      type: 'SET_COUNTRY_BY_NAME',\r\n      payload: e.target.value\r\n    })\r\n  }\r\n  const clearInput = () => {\r\n    dispatch({\r\n      type: 'SET_COUNTRY_BY_NAME',\r\n      payload: ''\r\n    })\r\n    setInputValue('')\r\n  }\r\n  return (\r\n    <SearchStyled>\r\n      {\r\n        inputValue &&\r\n        <i className=\"fas fa-times close\" onClick={clearInput}></i>\r\n      }\r\n      <Input placeholder=\"Search for a country...\" value={inputValue} onChange={filterByName} />\r\n    </SearchStyled>\r\n  )\r\n}\r\n\r\nexport default Search\r\n","import React, {useState} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components'\r\nconst RegionFilterStyled = styled.div`\r\n@import url('https://fonts.google.com/specimen/Nunito+Sans');\r\n* {\r\n    box-sizing: border-box;\r\n}\r\n.dropdown {\r\n  border-radius: 5px;\r\n  background-color: var(--white);\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.06), 0 1px 2px rgba(0, 0, 0, 0.12);\r\n  cursor: pointer;\r\n  text-align: center;\r\n  font-size: 12px;\r\n  padding: 20px;\r\n  position: relative;\r\n  background: var(--white);\r\n}\r\n.btn-toggle .fas {\r\n  display: none;\r\n}\r\n\r\nbody.dark .btn-toggle .fas {\r\n  display: inline-block;\r\n}\r\n\r\n\r\n.dropdown .fa-chevron-down {\r\n  margin-left: 10px;\r\n}\r\n\r\n.dropdown ul {\r\nborder-radius: 4px;\r\n  background-color: var(--background-el);\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.06), 0 1px 2px rgba(0, 0, 0, 0.12);\r\n  display: none;\r\n  padding: 10px;\r\n  text-align: center;\r\n  position: absolute;\r\n  top: 100%;\r\n  left: 0;\r\n  list-style-type: none;\r\n  background: var(--white);\r\n  width: 100%;\r\n  z-index: 99;\r\n}\r\n\r\n.dropdown.open ul {\r\n  display: block;\r\n}\r\n\r\n.dropdown ul li {\r\n  margin: 10px 0;\r\n}\r\n\r\n`\r\n\r\nconst filterByRegionAction = (regionSelected) => {\r\n  return {\r\n    type: 'FILTER_BY_REGION',\r\n    payload: { regionSelected },\r\n  };\r\n}\r\n\r\nexport const Region = () => {\r\n  const dispatch = useDispatch();\r\n  const [dropdown, setdropdown] = useState(false)\r\n  const filterByRegion = useSelector((state) => state.filterByRegion);\r\n\r\n  const onRegionChange = (selectEvent) => {\r\n\r\n    dispatch(filterByRegionAction(selectEvent));\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <RegionFilterStyled>\r\n\r\n    <div className={`${dropdown?'dropdown open':'dropdown'}`} onClick={()=> setdropdown(!dropdown)} id=\"filter\">\r\n          Filter by Region\r\n          <i className=\"fas fa-chevron-down\"></i>\r\n          <ul>\r\n            <li onClick={()=>onRegionChange('Africa')}>Africa</li>\r\n            <li onClick={()=>onRegionChange('Americas')}>Americas</li>\r\n            <li onClick={()=>onRegionChange('Asia')}>Asia</li>\r\n            <li onClick={()=>onRegionChange('Europe')}>Europe</li>\r\n            <li onClick={()=>onRegionChange('Oceania')}>Oceania</li>\r\n          </ul>\r\n        </div>\r\n    </RegionFilterStyled>\r\n    </>\r\n  )\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Search from './search'\r\nimport { Region as FilterByRegion } from './Region'\r\nimport Wrapper from './wrapper'\r\n\r\nconst ActionListStyled = styled.div`\r\n  .grid {\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    grid-row-gap: 20px;\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    .grid {\r\n      grid-template-columns: 480px 1fr 164px;\r\n    }\r\n  }\r\n`\r\n\r\nfunction ActionList() {\r\n  return (\r\n    <ActionListStyled>\r\n      <Wrapper>\r\n        <div className=\"grid\">\r\n          <Search />\r\n          <span></span>\r\n          <FilterByRegion />\r\n        </div>\r\n      </Wrapper>\r\n    </ActionListStyled>\r\n  )\r\n}\r\n\r\nexport default ActionList\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Wrapper from './wrapper'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst HeaderStyled = styled.div`\r\n  background: var(--white);\r\n  margin-bottom: 1em;\r\n  box-shadow: 0 2px 4px 0 rgba(0,0,0,.06);\r\n  .content {\r\n    height: 80px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n  }\r\n  h1 {\r\n    font-size: 14px;\r\n  }\r\n  a {\r\n    text-decoration: none;\r\n    color: var(--dark);\r\n  }\r\n  .dark-mode {\r\n    cursor: pointer;\r\n    .moon {\r\n      transform: rotate(-25deg);\r\n      display: inline-flex;\r\n      margin-right: 10px;\r\n    }\r\n    p {\r\n      font-size: 12px;\r\n      font-weight: 600;\r\n    }\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    margin-bottom: 3em;\r\n    h1 {\r\n      font-size: 24px;\r\n    }\r\n    p {\r\n      font-size: 1rem;\r\n    }\r\n  }\r\n`\r\n\r\nfunction Header({ setDarkMode, darkMode }) {\r\n  function handleClick() {\r\n    setDarkMode(!darkMode)\r\n  }\r\n  return (\r\n    <HeaderStyled>\r\n      <Wrapper>\r\n        <div className=\"content\">\r\n          <Link to=\"/\">\r\n            <h1>\r\n              Where in the world?\r\n            </h1>\r\n          </Link>\r\n          <div className=\"dark-mode\">\r\n            <p onClick={handleClick}>\r\n              <span className=\"moon\">\r\n                {\r\n                  darkMode ?\r\n                    <i className=\"fas fa-moon\"></i> :\r\n                    <i className=\"far fa-moon\"></i>\r\n                }\r\n              </span>\r\n              Dark Mode\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </Wrapper>\r\n    </HeaderStyled>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst CountrySelectedStyled = styled.div`\r\n  margin-top: 3em;\r\n  padding-bottom: 3em;\r\n  img {\r\n    width: 100%;\r\n    margin-bottom: 2em;\r\n  }\r\n  .grid {\r\n    display: grid;\r\n    grid-row-gap: 1em;\r\n  }\r\n  .border-item {\r\n    padding: .5em 2em;\r\n    border-radius: 5px;\r\n    margin-right: 15px;\r\n    box-shadow: 0 0 5px rgba(0,0,0,.3);\r\n    display: inline-flex;\r\n    margin-bottom: 15px;\r\n    background: var(--white);\r\n  }\r\n  .languages {\r\n    span {\r\n      margin-right: 5px;\r\n      &:after {\r\n        content: ',';\r\n      }\r\n      &:last-child {\r\n        &:after {\r\n          display: none;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  @media screen and (min-width: 1024px) {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-column-gap: 120px;\r\n    margin-top: 5em;\r\n    .grid {\r\n      grid-template-columns: 1fr 1fr;\r\n    }\r\n    .borders {\r\n      display: inline-flex;\r\n      margin-right: 1em;\r\n      margin-top: 3.5em;\r\n    }\r\n  }\r\n`\r\n\r\nfunction CountrySelected({\r\n  flag,\r\n  name,\r\n  nativeName,\r\n  population,\r\n  region,\r\n  subregion,\r\n  capital,\r\n  topLevelDomain,\r\n  currencies = [],\r\n  languages = [],\r\n  borders = [],\r\n  alpha2Code\r\n}) {\r\n  return (\r\n    <CountrySelectedStyled>\r\n      <img src={flag} alt=\"\" />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <div className=\"grid\">\r\n          <div>\r\n            <p><strong>Native Name:</strong> {nativeName}</p>\r\n            <p><strong>Population:</strong> {population}</p>\r\n            <p><strong>Region:</strong> {region}</p>\r\n            <p><strong>Sub Region:</strong> {subregion}</p>\r\n            <p><strong>Capital:</strong> {capital}</p>\r\n          </div>\r\n          <div>\r\n            <p><strong>Top Level Domain:</strong> {topLevelDomain}</p>\r\n            <p><strong>Currencies:</strong> {currencies.map((item) => <span>{item.name}</span>)}</p>\r\n            <p className=\"languages\"><strong>Languages:</strong> {languages.map((item) => <span>{item.name}</span>)}</p>\r\n          </div>\r\n        </div>\r\n        <p className=\"borders\"><strong>Border Countries:</strong></p>\r\n        {borders.map((item) => <span class=\"border-item\">{item}</span>)}\r\n      </div>\r\n    </CountrySelectedStyled>\r\n  )\r\n}\r\n\r\nexport default CountrySelected\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport Wrapper from './wrapper'\r\nimport { useSelector } from 'react-redux'\r\nimport CountrySelected from './country-selected'\r\n\r\nconst CountryPageStyled = styled.div`\r\n  .back {\r\n    background: var(--white);\r\n    box-shadow: 0 0 5px rgba(0,0,0,.3);\r\n    padding: .7em 2.2em;\r\n    border-radius: 5px;\r\n    border: none;\r\n    cursor: pointer;\r\n    margin-top: 1em;\r\n    color: var(--black);\r\n    i {\r\n      margin-right: 5px;\r\n    }\r\n  }\r\n  @media screen and (min-width: 1024px) {\r\n    .back {\r\n      margin-top: 3em;\r\n    }\r\n  }\r\n`\r\n\r\nfunction CountryPage({ match, history }) {\r\n  let DBcountry = useSelector(state => state.countryList.find(item => item.alpha2Code === match.params.id))\r\n  const [country, setCountry] = useState(DBcountry)\r\n  useEffect(() => {\r\n\r\n    if (!country) {\r\n      fetch(`https://restcountries.eu/rest/v2/alpha/${match.params.id.toLowerCase()}`)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setCountry(data)\r\n        })\r\n    }\r\n  }, [country, match.params.id])\r\n\r\n  function handleClick() {\r\n    history.goBack()\r\n  }\r\n  return (\r\n    <CountryPageStyled>\r\n      <Wrapper>\r\n        <button className=\"back\" onClick={handleClick}><i className=\"fas fa-long-arrow-alt-left\"></i> Back</button>\r\n        <CountrySelected {...country} />\r\n      </Wrapper>\r\n    </CountryPageStyled>\r\n  )\r\n}\r\n\r\nexport default CountryPage\r\n","import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport CountryList from './country-list'\r\nimport { Provider } from 'react-redux'\r\nimport { createStore } from 'redux'\r\nimport reducer from './reducer'\r\nimport ActionList from './action-list'\r\nimport Header from './header'\r\nimport CountryPage from './country-page'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n} from 'react-router-dom'\r\n\r\nconst initialState = {\r\n  countryList: [],\r\n  countryListByName: [],\r\n  coutryFilteredByRegion: [],\r\n  filterByRegion: '',\r\n\r\n}\r\n\r\nconst store = createStore(reducer, initialState)\r\n\r\nfunction App() {\r\n  const [darkMode, setDarkMode] = useState(false)\r\n  const [checked, setChecked] = useState(false)\r\n  const mainClass = darkMode ? 'is-dark-mode' : 'is-light-mode'\r\n\r\n  function changeMedia(mq) {\r\n    setDarkMode(mq.matches)\r\n    setChecked(mq.matches)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const mq = window.matchMedia('(prefers-color-scheme: dark)')\r\n    mq.addListener(changeMedia)\r\n    setDarkMode(mq.matches)\r\n    setChecked(mq.matches)\r\n    return () => {\r\n      mq.removeListener(changeMedia)\r\n    }\r\n  }, [])\r\n  return (\r\n    <main className={mainClass}>\r\n      <Provider store={store}>\r\n        <Router>\r\n          <Header setDarkMode={setDarkMode} darkMode={darkMode} />\r\n          <Switch>\r\n            <Route path=\"/country/:id\" component={CountryPage} />\r\n            <Route path=\"/\">\r\n              <ActionList />\r\n              <CountryList />\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n      </Provider>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export default function reducer(state, action) {\r\n  console.log(action)\r\n  switch (action.type) {\r\n    case 'SET_COUNTRY_LIST': {\r\n      console.log('voy a actualizar la lista de paises')\r\n      return { ...state, countryList: action.payload }\r\n    }\r\n\r\n    case 'SET_COUNTRY_BY_NAME': {\r\n      let list\r\n      if (state.filterByRegion !== '') {\r\n        list = state.coutryFilteredByRegion\r\n      } else {\r\n        list = state.countryList\r\n      }\r\n      const countryListByName = list.filter(country => country.name.toLowerCase().includes(action.payload.toLowerCase()))\r\n      return { ...state, countryListByName }\r\n    }\r\n\r\n\r\n    case 'FILTER_BY_REGION': {\r\n      const { regionSelected } = action.payload;\r\n\r\n      if ('' === regionSelected) {\r\n        return { ...state, coutryFilteredByRegion: [], filterByRegion: '', };\r\n      }\r\n\r\n      const coutryFilteredByRegion = state.countryList.filter((country) => country.region === regionSelected);\r\n\r\n      return { ...state, coutryFilteredByRegion, filterByRegion: regionSelected }\r\n    }\r\n\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}